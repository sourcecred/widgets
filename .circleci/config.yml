# JavaScript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
# See https://circleci.com/docs/2.0/config-intro/#section=configuration for spec
#
version: 2.1

orbs:
  # https://circleci.com/orbs/registry/orb/circleci/docker
  docker: circleci/docker@0.5.13

executors:
  node:
    docker:
      - image: circleci/node:12
    working_directory: ~/repo

commands:
  set_up_node_modules:
    description: "load node_modules, updating and storing back into cache if necessary"
    steps:
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
            # fall back to using the latest cache if no exact match is found
            - v1-dependencies-
      - run: yarn install
      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}
  rebuild_example_site:
    # Requires the SOURCECRED_GITHUB_TOKEN secret env var.
    description: Generate a new version of the example site
    steps:
      # This ensures we can approach github over SSH.
      - run: |
          mkdir -p ~/.ssh;
          ssh-keyscan -H github.com >> ~/.ssh/known_hosts;
      # Include a bot account SSH key if you're using the git plugin.
      # echo "$SSH_BOT_KEY" > ~/.ssh/id_rsa && chmod 0600 ~/.ssh/id_rsa;
      - run: ./example/rebuild-widgets.sh
  deploy_example_site:
    description: Commit and push ./example/site to the gh-pages branch
    steps:
      - run: |
          mkdir -p ~/.ssh;
          ssh-keyscan -H github.com >> ~/.ssh/known_hosts;
      - add_ssh_keys:
          fingerprints:
            - 7e:54:5f:a1:dd:b1:58:7c:13:ab:83:63:f9:c6:71:10
      - run: |
          cd ~/repo/example/site;
          git init;
          git config user.email "bot@sourcecred.io";
          git config user.name "Deployment Bot";
          git checkout -b gh-pages;
          git add --all;
          git commit -m "Publishing to gh-pages `date`" -m "[ci skip]";
          git push -f git@github.com:sourcecred/widgets.git gh-pages;
  pull_cache_from_images:
    description: Pulls docker images usable for our cache.
    steps:
      - run: docker pull node:12
      - run: docker pull sourcecred/widgets:latest

jobs:
  test:
    executor: node
    steps:
      - checkout
      - set_up_node_modules
      - run: yarn -s build
      - run: yarn test
  update_example_site:
    executor: node
    steps:
      - checkout
      - run: git submodule update --recursive --init
      - rebuild_example_site
      - deploy_example_site

workflows:
  version: 2.0
  commit:
    jobs:
      - test
      - docker/publish:
          deploy: false
          image: sourcecred/widgets
          tag: latest
          extra_build_args: --cache-from=node:12,sourcecred/widgets:latest
          requires:
            - test
          filters:
            branches:
              ignore:
                - master
          before_build:
            - pull_cache_from_images
          after_build:
            - run:
                name: Preview Docker Tag for Build
                command: |
                   DOCKER_TAG=$(echo "${CIRCLE_SHA1}" | head -c 12)
                   echo "Commit that would be used for Docker tag is ${DOCKER_TAG}"

      - docker/publish:
          image: sourcecred/widgets
          tag: latest
          extra_build_args: --cache-from=node:12,sourcecred/widgets:latest
          requires:
            - test
          filters:
            branches:
              only: master
          before_build:
            - pull_cache_from_images
          after_build:
            - run:
                name: Publish Docker Tag with Commit
                command: |
                   DOCKER_TAG=$(echo "${CIRCLE_SHA1}" | head -c 12)
                   echo "Commit for Docker tag is ${DOCKER_TAG}"
                   docker tag sourcecred/widgets:latest sourcecred/widgets:${DOCKER_TAG}
                   docker tag sourcecred/widgets:latest sourcecred/widgets:dev
                   docker push sourcecred/widgets

  nightly:
    jobs:
      - update_example_site
    triggers:
      - schedule:
          cron: "0 23 * * *"  # 23:00 UTC
          filters:
            branches:
              only:
                - master
